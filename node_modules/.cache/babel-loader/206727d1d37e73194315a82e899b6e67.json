{"ast":null,"code":"import { localServe } from \"../../Services/LocalServe\";\nimport localStorageServ from \"../../serviceWorker/locaStorage.service\";\nimport { UserDetailModel } from \"../../_core/models/userDetailModel\";\nimport { SET_USER_INFOR } from \"../Constants/userConstant\";\nimport { GET_USER_LIST, LOGIN, SET_USER_ADMIN_LIST, SET_USER_DETAILS_INFOR, SET_USER_DETAILS_TICKET_INFOR } from \"../Constants/userType\";\nlet initialState = {\n  userInfor: localServe.getUserInfor(),\n  userInforDetails: new UserDetailModel(),\n  userInforDetailsTickets: []\n};\nexport const userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_INFOR:\n      {\n        state.userInfor = action.payload;\n        return { ...state\n        };\n      }\n\n    case GET_USER_LIST:\n      {\n        state.userList = action.payload;\n        return { ...state\n        };\n      }\n\n    case SET_USER_ADMIN_LIST:\n      {\n        let cloneArr = [...state.userList];\n        cloneArr.push(action.payload);\n        state.userList = cloneArr;\n        return { ...state\n        };\n      }\n\n    case SET_USER_DETAILS_INFOR:\n      {\n        state.userInforDetails = action.payload;\n        return { ...state\n        };\n      }\n\n    case SET_USER_DETAILS_TICKET_INFOR:\n      {\n        state.userInforDetailsTickets = action.payload;\n        return { ...state\n        };\n      }\n\n    default:\n      {\n        return { ...state\n        };\n      }\n  }\n};","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/Airbnb-CLone/Air-Bnb-modal/Air-Bnb-modal/src/redux/Reducers/UserReducer.js"],"names":["localServe","localStorageServ","UserDetailModel","SET_USER_INFOR","GET_USER_LIST","LOGIN","SET_USER_ADMIN_LIST","SET_USER_DETAILS_INFOR","SET_USER_DETAILS_TICKET_INFOR","initialState","userInfor","getUserInfor","userInforDetails","userInforDetailsTickets","userReducer","state","action","type","payload","userList","cloneArr","push"],"mappings":"AAAA,SAASA,UAAT,QAA2B,2BAA3B;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SACEC,aADF,EAEEC,KAFF,EAGEC,mBAHF,EAIEC,sBAJF,EAKEC,6BALF,QAMO,uBANP;AAQA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAEV,UAAU,CAACW,YAAX,EADM;AAEjBC,EAAAA,gBAAgB,EAAE,IAAIV,eAAJ,EAFD;AAGjBW,EAAAA,uBAAuB,EAAE;AAHR,CAAnB;AAMA,OAAO,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,cAAL;AAAqB;AACnBY,QAAAA,KAAK,CAACL,SAAN,GAAkBM,MAAM,CAACE,OAAzB;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AAED,SAAKX,aAAL;AAAoB;AAClBW,QAAAA,KAAK,CAACI,QAAN,GAAiBH,MAAM,CAACE,OAAxB;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AACD,SAAKT,mBAAL;AAA0B;AACxB,YAAIc,QAAQ,GAAG,CAAC,GAAGL,KAAK,CAACI,QAAV,CAAf;AACAC,QAAAA,QAAQ,CAACC,IAAT,CAAcL,MAAM,CAACE,OAArB;AACAH,QAAAA,KAAK,CAACI,QAAN,GAAiBC,QAAjB;AACA,eAAO,EAAE,GAAGL;AAAL,SAAP;AACD;;AACD,SAAKR,sBAAL;AAA6B;AAC3BQ,QAAAA,KAAK,CAACH,gBAAN,GAAyBI,MAAM,CAACE,OAAhC;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AACD,SAAKP,6BAAL;AAAoC;AAClCO,QAAAA,KAAK,CAACF,uBAAN,GAAgCG,MAAM,CAACE,OAAvC;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AAED;AAAS;AACP,eAAO,EAAE,GAAGA;AAAL,SAAP;AACD;AA3BH;AA6BD,CA9BM","sourcesContent":["import { localServe } from \"../../Services/LocalServe\";\r\nimport localStorageServ from \"../../serviceWorker/locaStorage.service\";\r\nimport { UserDetailModel } from \"../../_core/models/userDetailModel\";\r\nimport { SET_USER_INFOR } from \"../Constants/userConstant\";\r\nimport {\r\n  GET_USER_LIST,\r\n  LOGIN,\r\n  SET_USER_ADMIN_LIST,\r\n  SET_USER_DETAILS_INFOR,\r\n  SET_USER_DETAILS_TICKET_INFOR,\r\n} from \"../Constants/userType\";\r\n\r\nlet initialState = {\r\n  userInfor: localServe.getUserInfor(),\r\n  userInforDetails: new UserDetailModel(),\r\n  userInforDetailsTickets: [],\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_INFOR: {\r\n      state.userInfor = action.payload;\r\n      return { ...state };\r\n    }\r\n\r\n    case GET_USER_LIST: {\r\n      state.userList = action.payload;\r\n      return { ...state };\r\n    }\r\n    case SET_USER_ADMIN_LIST: {\r\n      let cloneArr = [...state.userList];\r\n      cloneArr.push(action.payload);\r\n      state.userList = cloneArr;\r\n      return { ...state };\r\n    }\r\n    case SET_USER_DETAILS_INFOR: {\r\n      state.userInforDetails = action.payload;\r\n      return { ...state };\r\n    }\r\n    case SET_USER_DETAILS_TICKET_INFOR: {\r\n      state.userInforDetailsTickets = action.payload;\r\n      return { ...state };\r\n    }\r\n\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}