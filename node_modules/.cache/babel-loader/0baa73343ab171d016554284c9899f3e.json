{"ast":null,"code":"import AxiosServ from \"./axios.service\";\n/* eslint-disable no-useless-constructor */\n\nclass HttpRequestService {\n  constructor() {\n    this.layDanhSachPhong = () => {\n      const url = \"/api/rooms\";\n      return AxiosServ.getMethod(url);\n    };\n\n    this.layThongTinPhong = id => {\n      const url = `/api/rooms/${id}`;\n      return AxiosServ.getMethod(url);\n    };\n\n    this.layDanhGiaPhong = id => {\n      const url = `/api/reviews/byRoom?roomId=${id}`;\n      return AxiosServ.getMethod(url);\n    };\n\n    this.layVeDaDangKi = id => {\n      const url = `/api/tickets/by-user?userId=${id}`;\n      return AxiosServ.getMethod(url);\n    };\n\n    this.dangNhap = data => {\n      const url = \"/api/auth/login\";\n      return AxiosServ.postMethod(url, data);\n    };\n\n    this.dangKi = data => {\n      const url = \"/api/auth/register\";\n      return AxiosServ.postMethod(url, data);\n    };\n\n    this.loginUser = data => {\n      const uri = `/api/auth/login`;\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.getUserList = function () {\n      let user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (user.trim() !== \"\") {\n        const uri = `/api/users/pagination?name=${user}`;\n        return AxiosServ.getMethod(uri);\n      }\n\n      const uri = `/api/users/pagination`;\n      return AxiosServ.getMethod(uri);\n    };\n\n    this.addUserAdmin = data => {\n      const uri = \"/api/users\";\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.getUserInfor = id => {\n      const uri = `/api/users/${id}`;\n      return AxiosServ.getMethod(uri, id);\n    };\n\n    this.getListTicketsByUser = userId => {\n      const uri = `/api/tickets/by-user?userId=${userId}`;\n      return AxiosServ.getMethod(uri, userId);\n    };\n\n    this.updateUserInfor = (data, id) => {\n      const uri = `/api/users/${id}`;\n      return AxiosServ.putMethod(uri, data);\n    };\n\n    this.deleteUser = id => {\n      const uri = `/api/users/${id}`;\n      return AxiosServ.deleteMothod(uri, id);\n    };\n\n    this.updateImgUser = (userImg, id) => {\n      const uri = `/api/users/upload-avatar/${id}`;\n      return AxiosServ.postMethod(uri, userImg);\n    };\n\n    this.getLocationList = function () {\n      let location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (location.trim() !== \"\") {\n        const uri = `/api/locations?location=${location}`;\n        return AxiosServ.getMethod(uri);\n      }\n\n      const uri = `/api/locations`;\n      return AxiosServ.getMethod(uri);\n    };\n\n    this.addLocation = data => {\n      const uri = \"/api/locations\";\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.getLocationDetail = id => {\n      const uri = `/api/locations/${id}`;\n      return AxiosServ.getMethod(uri, id);\n    };\n\n    this.updateLocationDetail = (data, id) => {\n      const uri = `/api/locations/${id}`;\n      return AxiosServ.putMethod(uri, data);\n    };\n\n    this.deleteLocation = id => {\n      const uri = `/api/locations/${id}`;\n      return AxiosServ.deleteMothod(uri, id);\n    };\n\n    this.updateImgLocation = (locationImg, id) => {\n      const uri = `/api/locations/upload-images/${id}`;\n      return AxiosServ.postMethod(uri, locationImg);\n    };\n\n    this.getRoomList = function () {\n      let locationId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (locationId.trim() !== \"\") {\n        const uri = `/api/rooms?locationId=${locationId}`;\n        return AxiosServ.getMethod(uri);\n      }\n\n      const uri = `/api/rooms`;\n      return AxiosServ.getMethod(uri);\n    };\n\n    this.addRoom = data => {\n      const uri = `/api/rooms`;\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.getRoomDetail = id => {\n      const uri = `/api/rooms/${id}`;\n      return AxiosServ.getMethod(uri, id);\n    };\n\n    this.updateRoomDetail = (data, id) => {\n      const uri = `/api/rooms/${id}`;\n      return AxiosServ.putMethod(uri, data);\n    };\n\n    this.deleteRoom = id => {\n      const uri = `/api/rooms/${id}`;\n      return AxiosServ.deleteMothod(uri, id);\n    };\n\n    this.updateImgRoom = (roomImg, id) => {\n      const uri = `/api/rooms/upload-image/${id}`;\n      return AxiosServ.postMethod(uri, roomImg);\n    };\n\n    this.getValueateListByRoom = function () {\n      let roomId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (roomId !== \"\") {\n        const uri = `/api/reviews/byRoom?roomId=${roomId}`;\n        return AxiosServ.getMethod(uri, roomId);\n      } else {\n        const uri = `/api/reviews/byRoom`;\n        return AxiosServ.getMethod(uri);\n      }\n    };\n\n    this.addValueateByRoom = (data, roomId) => {\n      const uri = `/api/reviews?roomId=${roomId}`;\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.deleteValueateByRoom = valueateId => {\n      const uri = `/api/reviews/${valueateId}`;\n      return AxiosServ.deleteMothod(uri);\n    };\n\n    this.getValueateDetail = valueateId => {\n      const uri = `/api/reviews/${valueateId}`;\n      return AxiosServ.getMethod(uri);\n    };\n\n    this.updateValueateDetail = (data, valueateId) => {\n      const uri = `/api/reviews/${valueateId}`;\n      return AxiosServ.putMethod(uri, data);\n    };\n\n    this.getListTickets = () => {\n      const uri = `/api/tickets`;\n      return AxiosServ.getMethod(uri);\n    };\n  } // layDanhSachPhim = () => {\n  //   const uri = \"/api/QuanLyPhim/LayDanhSachPhim\";\n  //   return AxiosServ.getMethod(uri, false);\n  // };\n  // dangNhap = (data) => {\n  //   const uri = \"/api/QuanLyNguoiDung/DangNhap\";\n  //   return AxiosServ.postMethod(uri, data);\n  // };\n\n\n}\n\nconst httpServ = new HttpRequestService();\nexport default httpServ;","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/Airbnb-CLone/Air-Bnb-modal/Air-Bnb-modal/src/serviceWorker/http.service.js"],"names":["AxiosServ","HttpRequestService","constructor","layDanhSachPhong","url","getMethod","layThongTinPhong","id","layDanhGiaPhong","layVeDaDangKi","dangNhap","data","postMethod","dangKi","loginUser","uri","getUserList","user","trim","addUserAdmin","getUserInfor","getListTicketsByUser","userId","updateUserInfor","putMethod","deleteUser","deleteMothod","updateImgUser","userImg","getLocationList","location","addLocation","getLocationDetail","updateLocationDetail","deleteLocation","updateImgLocation","locationImg","getRoomList","locationId","addRoom","getRoomDetail","updateRoomDetail","deleteRoom","updateImgRoom","roomImg","getValueateListByRoom","roomId","addValueateByRoom","deleteValueateByRoom","valueateId","getValueateDetail","updateValueateDetail","getListTickets","httpServ"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AAEA;;AACA,MAAMC,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,GAAG;AAAA,SAWdC,gBAXc,GAWK,MAAM;AACvB,YAAMC,GAAG,GAAG,YAAZ;AAEA,aAAOJ,SAAS,CAACK,SAAV,CAAoBD,GAApB,CAAP;AACD,KAfa;;AAAA,SAgBdE,gBAhBc,GAgBMC,EAAD,IAAQ;AACzB,YAAMH,GAAG,GAAI,cAAaG,EAAG,EAA7B;AAEA,aAAOP,SAAS,CAACK,SAAV,CAAoBD,GAApB,CAAP;AACD,KApBa;;AAAA,SAqBdI,eArBc,GAqBKD,EAAD,IAAQ;AACxB,YAAMH,GAAG,GAAI,8BAA6BG,EAAG,EAA7C;AAEA,aAAOP,SAAS,CAACK,SAAV,CAAoBD,GAApB,CAAP;AACD,KAzBa;;AAAA,SA0BdK,aA1Bc,GA0BGF,EAAD,IAAQ;AACtB,YAAMH,GAAG,GAAI,+BAA8BG,EAAG,EAA9C;AAEA,aAAOP,SAAS,CAACK,SAAV,CAAoBD,GAApB,CAAP;AACD,KA9Ba;;AAAA,SA+BdM,QA/Bc,GA+BFC,IAAD,IAAU;AACnB,YAAMP,GAAG,GAAG,iBAAZ;AAEA,aAAOJ,SAAS,CAACY,UAAV,CAAqBR,GAArB,EAA0BO,IAA1B,CAAP;AACD,KAnCa;;AAAA,SAoCdE,MApCc,GAoCJF,IAAD,IAAU;AACjB,YAAMP,GAAG,GAAG,oBAAZ;AAEA,aAAOJ,SAAS,CAACY,UAAV,CAAqBR,GAArB,EAA0BO,IAA1B,CAAP;AACD,KAxCa;;AAAA,SAgDdG,SAhDc,GAgDDH,IAAD,IAAU;AACpB,YAAMI,GAAG,GAAI,iBAAb;AACA,aAAOf,SAAS,CAACY,UAAV,CAAqBG,GAArB,EAA0BJ,IAA1B,CAAP;AACD,KAnDa;;AAAA,SAqDdK,WArDc,GAqDA,YAAe;AAAA,UAAdC,IAAc,uEAAP,EAAO;;AAC3B,UAAIA,IAAI,CAACC,IAAL,OAAgB,EAApB,EAAwB;AACtB,cAAMH,GAAG,GAAI,8BAA6BE,IAAK,EAA/C;AACA,eAAOjB,SAAS,CAACK,SAAV,CAAoBU,GAApB,CAAP;AACD;;AACD,YAAMA,GAAG,GAAI,uBAAb;AACA,aAAOf,SAAS,CAACK,SAAV,CAAoBU,GAApB,CAAP;AACD,KA5Da;;AAAA,SA8DdI,YA9Dc,GA8DER,IAAD,IAAU;AACvB,YAAMI,GAAG,GAAG,YAAZ;AAEA,aAAOf,SAAS,CAACY,UAAV,CAAqBG,GAArB,EAA0BJ,IAA1B,CAAP;AACD,KAlEa;;AAAA,SAoEdS,YApEc,GAoEEb,EAAD,IAAQ;AACrB,YAAMQ,GAAG,GAAI,cAAaR,EAAG,EAA7B;AACA,aAAOP,SAAS,CAACK,SAAV,CAAoBU,GAApB,EAAyBR,EAAzB,CAAP;AACD,KAvEa;;AAAA,SAyEdc,oBAzEc,GAyEUC,MAAD,IAAY;AACjC,YAAMP,GAAG,GAAI,+BAA8BO,MAAO,EAAlD;AACA,aAAOtB,SAAS,CAACK,SAAV,CAAoBU,GAApB,EAAyBO,MAAzB,CAAP;AACD,KA5Ea;;AAAA,SA8EdC,eA9Ec,GA8EI,CAACZ,IAAD,EAAOJ,EAAP,KAAc;AAC9B,YAAMQ,GAAG,GAAI,cAAaR,EAAG,EAA7B;AACA,aAAOP,SAAS,CAACwB,SAAV,CAAoBT,GAApB,EAAyBJ,IAAzB,CAAP;AACD,KAjFa;;AAAA,SAmFdc,UAnFc,GAmFAlB,EAAD,IAAQ;AACnB,YAAMQ,GAAG,GAAI,cAAaR,EAAG,EAA7B;AACA,aAAOP,SAAS,CAAC0B,YAAV,CAAuBX,GAAvB,EAA4BR,EAA5B,CAAP;AACD,KAtFa;;AAAA,SAuFdoB,aAvFc,GAuFE,CAACC,OAAD,EAAUrB,EAAV,KAAiB;AAC/B,YAAMQ,GAAG,GAAI,4BAA2BR,EAAG,EAA3C;AACA,aAAOP,SAAS,CAACY,UAAV,CAAqBG,GAArB,EAA0Ba,OAA1B,CAAP;AACD,KA1Fa;;AAAA,SA8FdC,eA9Fc,GA8FI,YAAmB;AAAA,UAAlBC,QAAkB,uEAAP,EAAO;;AACnC,UAAIA,QAAQ,CAACZ,IAAT,OAAoB,EAAxB,EAA4B;AAC1B,cAAMH,GAAG,GAAI,2BAA0Be,QAAS,EAAhD;AACA,eAAO9B,SAAS,CAACK,SAAV,CAAoBU,GAApB,CAAP;AACD;;AACD,YAAMA,GAAG,GAAI,gBAAb;AACA,aAAOf,SAAS,CAACK,SAAV,CAAoBU,GAApB,CAAP;AACD,KArGa;;AAAA,SAsGdgB,WAtGc,GAsGCpB,IAAD,IAAU;AACtB,YAAMI,GAAG,GAAG,gBAAZ;AACA,aAAOf,SAAS,CAACY,UAAV,CAAqBG,GAArB,EAA0BJ,IAA1B,CAAP;AACD,KAzGa;;AAAA,SA0GdqB,iBA1Gc,GA0GOzB,EAAD,IAAQ;AAC1B,YAAMQ,GAAG,GAAI,kBAAiBR,EAAG,EAAjC;AACA,aAAOP,SAAS,CAACK,SAAV,CAAoBU,GAApB,EAAyBR,EAAzB,CAAP;AACD,KA7Ga;;AAAA,SA8Gd0B,oBA9Gc,GA8GS,CAACtB,IAAD,EAAOJ,EAAP,KAAc;AACnC,YAAMQ,GAAG,GAAI,kBAAiBR,EAAG,EAAjC;AACA,aAAOP,SAAS,CAACwB,SAAV,CAAoBT,GAApB,EAAyBJ,IAAzB,CAAP;AACD,KAjHa;;AAAA,SAkHduB,cAlHc,GAkHI3B,EAAD,IAAQ;AACvB,YAAMQ,GAAG,GAAI,kBAAiBR,EAAG,EAAjC;AACA,aAAOP,SAAS,CAAC0B,YAAV,CAAuBX,GAAvB,EAA4BR,EAA5B,CAAP;AACD,KArHa;;AAAA,SAsHd4B,iBAtHc,GAsHM,CAACC,WAAD,EAAc7B,EAAd,KAAqB;AACvC,YAAMQ,GAAG,GAAI,gCAA+BR,EAAG,EAA/C;AACA,aAAOP,SAAS,CAACY,UAAV,CAAqBG,GAArB,EAA0BqB,WAA1B,CAAP;AACD,KAzHa;;AAAA,SA4HdC,WA5Hc,GA4HA,YAAqB;AAAA,UAApBC,UAAoB,uEAAP,EAAO;;AACjC,UAAIA,UAAU,CAACpB,IAAX,OAAsB,EAA1B,EAA8B;AAC5B,cAAMH,GAAG,GAAI,yBAAwBuB,UAAW,EAAhD;AACA,eAAOtC,SAAS,CAACK,SAAV,CAAoBU,GAApB,CAAP;AACD;;AACD,YAAMA,GAAG,GAAI,YAAb;AACA,aAAOf,SAAS,CAACK,SAAV,CAAoBU,GAApB,CAAP;AACD,KAnIa;;AAAA,SAoIdwB,OApIc,GAoIH5B,IAAD,IAAU;AAClB,YAAMI,GAAG,GAAI,YAAb;AACA,aAAOf,SAAS,CAACY,UAAV,CAAqBG,GAArB,EAA0BJ,IAA1B,CAAP;AACD,KAvIa;;AAAA,SAwId6B,aAxIc,GAwIGjC,EAAD,IAAQ;AACtB,YAAMQ,GAAG,GAAI,cAAaR,EAAG,EAA7B;AACA,aAAOP,SAAS,CAACK,SAAV,CAAoBU,GAApB,EAAyBR,EAAzB,CAAP;AACD,KA3Ia;;AAAA,SA4IdkC,gBA5Ic,GA4IK,CAAC9B,IAAD,EAAOJ,EAAP,KAAc;AAC/B,YAAMQ,GAAG,GAAI,cAAaR,EAAG,EAA7B;AACA,aAAOP,SAAS,CAACwB,SAAV,CAAoBT,GAApB,EAAyBJ,IAAzB,CAAP;AACD,KA/Ia;;AAAA,SAgJd+B,UAhJc,GAgJAnC,EAAD,IAAQ;AACnB,YAAMQ,GAAG,GAAI,cAAaR,EAAG,EAA7B;AACA,aAAOP,SAAS,CAAC0B,YAAV,CAAuBX,GAAvB,EAA4BR,EAA5B,CAAP;AACD,KAnJa;;AAAA,SAoJdoC,aApJc,GAoJE,CAACC,OAAD,EAAUrC,EAAV,KAAiB;AAC/B,YAAMQ,GAAG,GAAI,2BAA0BR,EAAG,EAA1C;AACA,aAAOP,SAAS,CAACY,UAAV,CAAqBG,GAArB,EAA0B6B,OAA1B,CAAP;AACD,KAvJa;;AAAA,SA0JdC,qBA1Jc,GA0JU,YAAiB;AAAA,UAAhBC,MAAgB,uEAAP,EAAO;;AACvC,UAAIA,MAAM,KAAK,EAAf,EAAmB;AACjB,cAAM/B,GAAG,GAAI,8BAA6B+B,MAAO,EAAjD;AACA,eAAO9C,SAAS,CAACK,SAAV,CAAoBU,GAApB,EAAyB+B,MAAzB,CAAP;AACD,OAHD,MAGO;AACL,cAAM/B,GAAG,GAAI,qBAAb;AACA,eAAOf,SAAS,CAACK,SAAV,CAAoBU,GAApB,CAAP;AACD;AACF,KAlKa;;AAAA,SAmKdgC,iBAnKc,GAmKM,CAACpC,IAAD,EAAOmC,MAAP,KAAkB;AACpC,YAAM/B,GAAG,GAAI,uBAAsB+B,MAAO,EAA1C;AACA,aAAO9C,SAAS,CAACY,UAAV,CAAqBG,GAArB,EAA0BJ,IAA1B,CAAP;AACD,KAtKa;;AAAA,SAuKdqC,oBAvKc,GAuKUC,UAAD,IAAgB;AACrC,YAAMlC,GAAG,GAAI,gBAAekC,UAAW,EAAvC;AACA,aAAOjD,SAAS,CAAC0B,YAAV,CAAuBX,GAAvB,CAAP;AACD,KA1Ka;;AAAA,SA2KdmC,iBA3Kc,GA2KOD,UAAD,IAAgB;AAClC,YAAMlC,GAAG,GAAI,gBAAekC,UAAW,EAAvC;AACA,aAAOjD,SAAS,CAACK,SAAV,CAAoBU,GAApB,CAAP;AACD,KA9Ka;;AAAA,SA+KdoC,oBA/Kc,GA+KS,CAACxC,IAAD,EAAOsC,UAAP,KAAsB;AAC3C,YAAMlC,GAAG,GAAI,gBAAekC,UAAW,EAAvC;AACA,aAAOjD,SAAS,CAACwB,SAAV,CAAoBT,GAApB,EAAyBJ,IAAzB,CAAP;AACD,KAlLa;;AAAA,SAqLdyC,cArLc,GAqLG,MAAM;AACrB,YAAMrC,GAAG,GAAI,cAAb;AACA,aAAOf,SAAS,CAACK,SAAV,CAAoBU,GAApB,CAAP;AACD,KAxLa;AAAE,GADO,CAGvB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAXuB;;AA4LzB,MAAMsC,QAAQ,GAAG,IAAIpD,kBAAJ,EAAjB;AAEA,eAAeoD,QAAf","sourcesContent":["import AxiosServ from \"./axios.service\";\r\n\r\n/* eslint-disable no-useless-constructor */\r\nclass HttpRequestService {\r\n  constructor() {}\r\n\r\n  // layDanhSachPhim = () => {\r\n  //   const uri = \"/api/QuanLyPhim/LayDanhSachPhim\";\r\n  //   return AxiosServ.getMethod(uri, false);\r\n  // };\r\n\r\n  // dangNhap = (data) => {\r\n  //   const uri = \"/api/QuanLyNguoiDung/DangNhap\";\r\n  //   return AxiosServ.postMethod(uri, data);\r\n  // };\r\n  layDanhSachPhong = () => {\r\n    const url = \"/api/rooms\";\r\n\r\n    return AxiosServ.getMethod(url);\r\n  };\r\n  layThongTinPhong = (id) => {\r\n    const url = `/api/rooms/${id}`;\r\n\r\n    return AxiosServ.getMethod(url);\r\n  };\r\n  layDanhGiaPhong = (id) => {\r\n    const url = `/api/reviews/byRoom?roomId=${id}`;\r\n\r\n    return AxiosServ.getMethod(url);\r\n  };\r\n  layVeDaDangKi = (id) => {\r\n    const url = `/api/tickets/by-user?userId=${id}`;\r\n\r\n    return AxiosServ.getMethod(url);\r\n  };\r\n  dangNhap = (data) => {\r\n    const url = \"/api/auth/login\";\r\n\r\n    return AxiosServ.postMethod(url, data);\r\n  };\r\n  dangKi = (data) => {\r\n    const url = \"/api/auth/register\";\r\n\r\n    return AxiosServ.postMethod(url, data);\r\n  };\r\n  // layThongTinNguoiDung=(data)=>{\r\n  //   const url=\"/api/QuanLyNguoiDung/LayThongTinNguoiDung\";\r\n\r\n  //   return AxiosServ.postMethod(url,data);\r\n  // }\r\n\r\n  //user services\r\n  loginUser = (data) => {\r\n    const uri = `/api/auth/login`;\r\n    return AxiosServ.postMethod(uri, data);\r\n  };\r\n\r\n  getUserList = (user = \"\") => {\r\n    if (user.trim() !== \"\") {\r\n      const uri = `/api/users/pagination?name=${user}`;\r\n      return AxiosServ.getMethod(uri);\r\n    }\r\n    const uri = `/api/users/pagination`;\r\n    return AxiosServ.getMethod(uri);\r\n  };\r\n\r\n  addUserAdmin = (data) => {\r\n    const uri = \"/api/users\";\r\n\r\n    return AxiosServ.postMethod(uri, data);\r\n  };\r\n\r\n  getUserInfor = (id) => {\r\n    const uri = `/api/users/${id}`;\r\n    return AxiosServ.getMethod(uri, id);\r\n  };\r\n\r\n  getListTicketsByUser = (userId) => {\r\n    const uri = `/api/tickets/by-user?userId=${userId}`;\r\n    return AxiosServ.getMethod(uri, userId);\r\n  };\r\n\r\n  updateUserInfor = (data, id) => {\r\n    const uri = `/api/users/${id}`;\r\n    return AxiosServ.putMethod(uri, data);\r\n  };\r\n\r\n  deleteUser = (id) => {\r\n    const uri = `/api/users/${id}`;\r\n    return AxiosServ.deleteMothod(uri, id);\r\n  };\r\n  updateImgUser = (userImg, id) => {\r\n    const uri = `/api/users/upload-avatar/${id}`;\r\n    return AxiosServ.postMethod(uri, userImg);\r\n  };\r\n\r\n  // location services\r\n\r\n  getLocationList = (location = \"\") => {\r\n    if (location.trim() !== \"\") {\r\n      const uri = `/api/locations?location=${location}`;\r\n      return AxiosServ.getMethod(uri);\r\n    }\r\n    const uri = `/api/locations`;\r\n    return AxiosServ.getMethod(uri);\r\n  };\r\n  addLocation = (data) => {\r\n    const uri = \"/api/locations\";\r\n    return AxiosServ.postMethod(uri, data);\r\n  };\r\n  getLocationDetail = (id) => {\r\n    const uri = `/api/locations/${id}`;\r\n    return AxiosServ.getMethod(uri, id);\r\n  };\r\n  updateLocationDetail = (data, id) => {\r\n    const uri = `/api/locations/${id}`;\r\n    return AxiosServ.putMethod(uri, data);\r\n  };\r\n  deleteLocation = (id) => {\r\n    const uri = `/api/locations/${id}`;\r\n    return AxiosServ.deleteMothod(uri, id);\r\n  };\r\n  updateImgLocation = (locationImg, id) => {\r\n    const uri = `/api/locations/upload-images/${id}`;\r\n    return AxiosServ.postMethod(uri, locationImg);\r\n  };\r\n\r\n  //rooms services\r\n  getRoomList = (locationId = \"\") => {\r\n    if (locationId.trim() !== \"\") {\r\n      const uri = `/api/rooms?locationId=${locationId}`;\r\n      return AxiosServ.getMethod(uri);\r\n    }\r\n    const uri = `/api/rooms`;\r\n    return AxiosServ.getMethod(uri);\r\n  };\r\n  addRoom = (data) => {\r\n    const uri = `/api/rooms`;\r\n    return AxiosServ.postMethod(uri, data);\r\n  };\r\n  getRoomDetail = (id) => {\r\n    const uri = `/api/rooms/${id}`;\r\n    return AxiosServ.getMethod(uri, id);\r\n  };\r\n  updateRoomDetail = (data, id) => {\r\n    const uri = `/api/rooms/${id}`;\r\n    return AxiosServ.putMethod(uri, data);\r\n  };\r\n  deleteRoom = (id) => {\r\n    const uri = `/api/rooms/${id}`;\r\n    return AxiosServ.deleteMothod(uri, id);\r\n  };\r\n  updateImgRoom = (roomImg, id) => {\r\n    const uri = `/api/rooms/upload-image/${id}`;\r\n    return AxiosServ.postMethod(uri, roomImg);\r\n  };\r\n\r\n  // Valueate Services\r\n  getValueateListByRoom = (roomId = \"\") => {\r\n    if (roomId !== \"\") {\r\n      const uri = `/api/reviews/byRoom?roomId=${roomId}`;\r\n      return AxiosServ.getMethod(uri, roomId);\r\n    } else {\r\n      const uri = `/api/reviews/byRoom`;\r\n      return AxiosServ.getMethod(uri);\r\n    }\r\n  };\r\n  addValueateByRoom = (data, roomId) => {\r\n    const uri = `/api/reviews?roomId=${roomId}`;\r\n    return AxiosServ.postMethod(uri, data);\r\n  };\r\n  deleteValueateByRoom = (valueateId) => {\r\n    const uri = `/api/reviews/${valueateId}`;\r\n    return AxiosServ.deleteMothod(uri);\r\n  };\r\n  getValueateDetail = (valueateId) => {\r\n    const uri = `/api/reviews/${valueateId}`;\r\n    return AxiosServ.getMethod(uri);\r\n  };\r\n  updateValueateDetail = (data, valueateId) => {\r\n    const uri = `/api/reviews/${valueateId}`;\r\n    return AxiosServ.putMethod(uri, data);\r\n  };\r\n\r\n  //Tickets services\r\n  getListTickets = () => {\r\n    const uri = `/api/tickets`;\r\n    return AxiosServ.getMethod(uri);\r\n  };\r\n}\r\n\r\nconst httpServ = new HttpRequestService();\r\n\r\nexport default httpServ;\r\n"]},"metadata":{},"sourceType":"module"}