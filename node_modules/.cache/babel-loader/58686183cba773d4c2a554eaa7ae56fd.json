{"ast":null,"code":"import { message } from \"antd\";\nimport { history } from \"../../App\";\nimport httpServ from \"../../serviceWorker/http.service\";\nimport { ADD_ROOM, GET_ROOM_DETAIL, GET_ROOM_LIST } from \"../Constants/roomType\";\nimport { getRoomAction } from \"./userActions\";\nexport const getRoomListAction = function () {\n  let locationId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return dispatch => {\n    httpServ.getRoomList(locationId).then(res => {\n      dispatch({\n        type: GET_ROOM_LIST,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const addRoomAction = (data, locationId) => {\n  return dispatch => {\n    httpServ.addRoom(data).then(res => {\n      message.success(\"Thêm thành công!\");\n      dispatch(getRoomAction());\n      history.push(`/admin/rooms/${locationId}`);\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const getRoomDetailAction = (id, locationId) => {\n  return dispatch => {\n    httpServ.getRoomDetail(id).then(res => {\n      dispatch({\n        type: GET_ROOM_DETAIL,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const updateRoomDetailAction = (data, id, locationId) => {\n  return dispatch => {\n    httpServ.updateRoomDetail(data, id).then(res => {\n      message.success(\"Cập nhật thành công!\");\n      history.push(`/admin/rooms/${locationId}`);\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const deleteRoomAction = (id, locationId) => {\n  return dispatch => {\n    httpServ.deleteRoom(id).then(res => {\n      httpServ.getRoomList(locationId).then(res => {\n        message.success(\"Xóa thành công!\");\n        dispatch({\n          type: GET_ROOM_LIST,\n          payload: res.data\n        });\n        history.push(`/admin/rooms/${locationId}`);\n      }).catch(err => {\n        console.log(\"err\", err);\n      });\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const updateImgRoomAction = (roomImg, id) => {\n  return dispatch => {\n    httpServ.updateImgRoom(roomImg, id).then(res => {\n      message.success(\"Cập nhật ảnh thành công!\");\n      httpServ.getRoomList().then(res => {\n        dispatch({\n          type: GET_ROOM_LIST,\n          payload: res.data\n        });\n      }).catch(err => {\n        console.log(\"err\", err);\n      });\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/Airbnb-CLone/Air-Bnb-modal/Air-Bnb-modal/src/redux/Actions/roomAction.js"],"names":["message","history","httpServ","ADD_ROOM","GET_ROOM_DETAIL","GET_ROOM_LIST","getRoomAction","getRoomListAction","locationId","dispatch","getRoomList","then","res","type","payload","data","catch","err","console","log","addRoomAction","addRoom","success","push","getRoomDetailAction","id","getRoomDetail","updateRoomDetailAction","updateRoomDetail","deleteRoomAction","deleteRoom","updateImgRoomAction","roomImg","updateImgRoom"],"mappings":"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","sourcesContent":["import { message } from \"antd\";\r\nimport { history } from \"../../App\";\r\nimport httpServ from \"../../serviceWorker/http.service\";\r\nimport {\r\n  ADD_ROOM,\r\n  GET_ROOM_DETAIL,\r\n  GET_ROOM_LIST,\r\n} from \"../Constants/roomType\";\r\nimport { getRoomAction } from \"./userActions\";\r\n\r\nexport const getRoomListAction = (locationId = \"\") => {\r\n  return (dispatch) => {\r\n    httpServ\r\n      .getRoomList(locationId)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: GET_ROOM_LIST,\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const addRoomAction = (data, locationId) => {\r\n  return (dispatch) => {\r\n    httpServ\r\n      .addRoom(data)\r\n      .then((res) => {\r\n        message.success(\"Thêm thành công!\");\r\n        dispatch(getRoomAction());\r\n        history.push(`/admin/rooms/${locationId}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getRoomDetailAction = (id, locationId) => {\r\n  return (dispatch) => {\r\n    httpServ\r\n      .getRoomDetail(id)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: GET_ROOM_DETAIL,\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateRoomDetailAction = (data, id, locationId) => {\r\n  return (dispatch) => {\r\n    httpServ\r\n      .updateRoomDetail(data, id)\r\n      .then((res) => {\r\n        message.success(\"Cập nhật thành công!\");\r\n        history.push(`/admin/rooms/${locationId}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteRoomAction = (id, locationId) => {\r\n  return (dispatch) => {\r\n    httpServ\r\n      .deleteRoom(id)\r\n      .then((res) => {\r\n        httpServ\r\n          .getRoomList(locationId)\r\n          .then((res) => {\r\n            message.success(\"Xóa thành công!\");\r\n            dispatch({\r\n              type: GET_ROOM_LIST,\r\n              payload: res.data,\r\n            });\r\n            history.push(`/admin/rooms/${locationId}`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err\", err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateImgRoomAction = (roomImg, id) => {\r\n  return (dispatch) => {\r\n    httpServ\r\n      .updateImgRoom(roomImg, id)\r\n      .then((res) => {\r\n        message.success(\"Cập nhật ảnh thành công!\");\r\n        httpServ\r\n          .getRoomList()\r\n          .then((res) => {\r\n            dispatch({\r\n              type: GET_ROOM_LIST,\r\n              payload: res.data,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err\", err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}